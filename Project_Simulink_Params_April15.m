%   SLDEMO_SUSPDAT Load suspension demo data
%   SLDEMO_SUSPDAT  when typed at the command line, places suspension model parameters 
%   in the MATLAB workspace (also called as preload function of sldemo_suspn)
%
%   See also SLDEMO_SUSPGRAPH

%   Author(s): D. Maclay, S. Quinn, 12/1/97 
%   Modified by R. Shenoy, 11/12/04
%   Copyright 1990-2015 The MathWorks, Inc.

close all

Lf = 0.64;	% front hub displacement from body CG in m
Lr = 0.782;       % rear hub displacement from body CG in m
Lh = 0.51;  % height of CG in m
Mb = 193;      % body mass in kg
Iyy = 82;	% body moment of inertia about y-axis in kgm^2
kf = 2190;     % front suspension stiffness in N/m
kr = 3365;	% rear suspension stiffness in N/m
cf = 750;	% front suspension damping in N/(m/s)
cr = 750; 	% rear suspension damping in N/(m/s)
Cr_ext = 750;
df = 0.3;   % front suspension travel in m
dr = 0.3;   % rear suspension travel in m
x0 = [-4.335788328729104e-018;-1.201224489795918e-001;6.462348535570529e-027;-1.033975765691285e-025]; %initial condition

L = Lf + Lr; %Wheelbase in m
Angle = 30; %Degrees

OG=0.60;
FG=1.35;         %Impacts everything, but especially 2-car ramp
RSG1=0.75;
RSG2=0.75;
RDG1=0.4;
RDG2=1;

Vs = [2.24,5,7.5,10,12.5,15,17.88];
Rs = [2];

for i=1:length(Vs)
     V = Vs(i); %Speed m/s
     
     for j=1
        RampCarRatio = Rs(j);
   
        Delay = L/V; %Delay in s
        Vhorz = V*cosd(Angle);
        RampLength = RampCarRatio*L;
        RampStart = 2; %5*(L/V);
        RampEnd = cosd(Angle)* RampLength/V + RampStart;

        Short = [0.000243145901382223;0.000966169777833481;0.00215956940561033;0.00381403071766862;0.00592042407791069;0.00846980062920642;0.0114533887137289;0.0148625903641714;0.0186889778644438;0.0229242903784718;0.0275604306457498;0.0325894617423263;0.0380036039059267;0.0437952314239426;0.0499568695830428;0.0564811916791863;0.0633610160868410;0.0705893033862358;0.0781591535474974;0.0860638031705434;0.0942966227796311;0.102851114171477;0.111720907815887;0.120899760307857;0.130381551870127;0.140160283905187;0.150230076595754;0.160585166552768;0.171219904509958;0.182128753064056;0.193306284459762;0.204747178418569;0.216446220010578;0.228398297568453;0.240598400642690;0.253041617997365;0.265723135645571;0.278638234923763;0.291782290604226;0.305150769044920;0.318739226375960;0];
        Med = [0.000149000000000020;0.000592069601333341;0.00132338583380089;0.00233724102977724;0.00362804054106630;0.00519030050096579;0.00701864563064609;0.00910780708896518;0.0114526203648609;0.0140480232114762;0.0168890536211914;0.0199708478407537;0.0232886384257097;0.0268377523333627;0.0306136090534925;0.0346117187760880;0.0388276805953631;0.0432571807493341;0.0478959908942564;0.0527399664132290;0.0577850447582918;0.0630272438253513;0.0684626603612843;0.0740874684025838;0.0798979177449215;0.0858903324430150;0.0920611093402002;0.0984067166271185;0.104923692428946;0.111608643420596;0.118458243469344;0.125469232304326;0.132638414212391;0.139962656759767;0.147438889539048;0.155064102940989;0.162835346950620;0.170749729967202;0.178804417647545;0.186996631772233;0.195323649134301;0.203782800449909;0.212371469290601;0.221087091036688;0.229927151851373;0.238889187675180;0.247970783240295;0.257169571104426;0.266483230703797;0.275909487424888;0.285446111694558;0.295090918088190;0.304841764455487;0.314696551063582;0.324653219757122;0.334709753134971;0.344864173743228;0.355114543284214;0.365458961841129;0.375895567118059;0.386422533695032;0.397038072297825;0.407740429082232;0.418527884932498;0.429398754773655;0.440351386897463;0.451384162301711;0.462495494042588;0.473683826599886;0.484947635254772;0.496285425479881;0.507695732341479;0.519177119913474;0.530728180703028;0.542347535087533;0.554033830762754;0.565785742201877;0.577601970125290;0.589481240980849;0.601422306434440;0.613423942870630;0.625484950903201;0];
        Long = [0.000108254836672813;0.000430163744907851;0.000961496089216183;0.00169810500633221;0.00263592574641225;0.00377097404707918;0.00509934453966339;0.00661720918700190;0.00832081575217172;0.0102064862975439;0.0122706157135585;0.0145096702766316;0.0169201862356179;0.0194987684262631;0.0222420889130922;0.0251468856581896;0.0282099612163398;0.0314281814560060;0.0347984743056348;0.0383178285247852;0.0419832924995923;0.0457919730620810;0.0497410343328599;0.0538276965867305;0.0580492351407596;0.0624029792643690;0.0668863111110070;0.0714966646709739;0.0762315247449834;0.0810884259380490;0.0860649516732918;0.0911587332252773;0.0963674487724928;0.101688822468588;0.107120623532003;0.112660665353629;0.118306804622133;0.124056940466603;0.129909013616173;0.135861005576286;0.141910937821267;0.148056871002889;0.154296904174606;0.160629174031146;0.167051854163169;0.173563154326673;0.180161319726873;0.186844630316264;0.193611400106572;0.200459976494341;0.207388739599865;0.214396101619217;0.221480506189104;0.228640427764303;0.235874371007419;0.243180870190732;0.250558488609885;0.258005818009182;0.265521478018268;0.273104115599963;0.280752404509025;0.288465044761637;0.296240762115395;0.304078307559594;0.311976456815605;0.319934009847150;0.327949790380267;0.336022645432790;0.344151444853134;0.352335080868224;0.360572467640369;0.368862540832911;0.377204257184478;0.385596594091664;0.394038549199973;0.402529140002865;0.411067403448741;0.419652395555705;0.428283191033963;0.436958882915693;0.445678582192244;0.454441417458521;0.463246534564413;0.472093096273121;0.480980281926249;0.489907287115533;0.498873323361063;0.507877617795885;0.516919412856840;0.525997965981529;0.535112549311280;0.544262449399992;0.553446966928749;0.562665416426082;0.571917125993769;0.581201437038072;0.590517704006284;0.599865294128504;0.609243587164519;0.618651975155699;0.628089862181804;0.637556664122611;0.647051808424255;0.656574733870203;0.666124890356755;0.675701738673000;0.685304750285120;0.694933407124973;0.704587201382855;0.714265635304374;0.723968220991337;0.733694480206585;0.743443944182693;0.753216153434458;0.763010657575093;0.772827015136073;0.782664793390537;0.792523568180193;0.802402923745649;0.812302452560104;0.822221755166328;0.832160440016880;0.842118123317480;0.852094428873485;0.862088987939409;0.872101439071416;0.882131427982744;0.892178607401976;0.902242636934137;0.912323182924523;0.922419918325239;0.932532522564376;0.942660681417773;0.952804086883330;0.962962437057796;0.973135436016009;0.983322793692519;0.993524225765559;1.00373945354331;1.01396820385243;1.02421020892876;1.03446520631024;1.04473293873191;1.05501315402298;1.06530560500601;1.07561004939797;1.08592624971338;1.09625397316928;1.10659299159212;1.11694308132651;1.12730402314569;1.13767560216394;1.14805760775053;1.15844983344549;1.16885207687706;1.17926413968069;1.18968582741973;1.20011694950763;1.21055731913168;1.22100675317836;1.23146507216000;1.24193210014305;1.25240766467766;1.26289159672874;0];


        if(RampCarRatio == 0.5)
            Slope = tand(1.95*Angle)*V;  
            Ramp = Short;
        elseif(RampCarRatio == 1)
            Slope = tand(1.5*Angle)*V;
            Ramp = Med;
        else
            Slope = tand(1.2*Angle)*V;
            Ramp = Long;
        end
        
            Times = [linspace(RampStart, RampEnd, length(Ramp)-1)'; RampEnd+0.001 ];
            RampMat = [Times, Ramp];

            %1.5 for 1 Car length, 1.95 for 0.5 Car length, 1.2 for 2 Car length  
            Ts = 0.005; %Sample Time (s)
        
        sim('Project_Simulink_April15');
     end
end







